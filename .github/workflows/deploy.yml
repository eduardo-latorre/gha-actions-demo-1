# Reusing workflows is only applicable within the scope of a job

# Example 3 - Using custom actions
name: My Workflow
on:
  push:
    branches:
      - main
jobs:
  test:
    uses: ./.github/workflows/reusable-workflow.yml # Reusing an external workflow
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Using my own action
        uses: eduardo-latorre/gha-actions-demo-2@v1
      - name: Build website
        run: npm run build
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      BUCKET_NAME: gha-custom-action-demo
      REGION: us-east-1
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Get built artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: ./dist
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.REGION }} 
      - name: Deploy static site to S3 bucket
        run: aws s3 sync ./dist s3://${{ env.BUCKET_NAME }} --delete
      - name: Output website url
        run: echo "http://${{ env.BUCKET_NAME }}.s3-website-${{ env.REGION }}.amazonaws.com"

# # Example 2 - Using reusable workflows
# name: My Workflow
# on:
#   push:
#     branches:
#       - main
# jobs:
#   test:
#     uses: ./.github/workflows/reusable-workflow.yml # Reusing an external workflow
#   build:
#     needs: test
#     runs-on: ubuntu-latest
#     steps:
#       - name: Get code
#         uses: actions/checkout@v4
#       - name: Caching dependencies
#         id: cache
#         uses: actions/cache@v4
#         with:
#           path: node_modules
#           key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
#       - name: Install dependencies
#         id: install
#         if: steps.cache.outputs.cache-hit != 'true'
#         run: |
#           npm ci
#       - name: Build website
#         run: npm run build
#       - name: Upload artifact
#         uses: actions/upload-artifact@v4
#         with:
#           name: dist-files
#           path: dist
#   deploy:
#     needs: build
#     runs-on: ubuntu-latest
#     env:
#       BUCKET_NAME: gha-custom-action-demo
#       REGION: us-east-1
#     steps:
#       - name: Get code
#         uses: actions/checkout@v4
#       - name: Get built artifact
#         uses: actions/download-artifact@v4
#         with:
#           name: dist-files
#           path: ./dist
#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v4
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ env.REGION }} 
#       - name: Deploy static site to S3 bucket
#         run: aws s3 sync ./dist s3://${{ env.BUCKET_NAME }} --delete
#       - name: Output website url
#         run: echo "http://${{ env.BUCKET_NAME }}.s3-website-${{ env.REGION }}.amazonaws.com"

# # Example 1 - Base
# name: My Workflow
# on:
#   push:
#     branches:
#       - main
# jobs:
#   test:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Get code
#         uses: actions/checkout@v4
#       - name: Caching dependencies
#         id: cache
#         uses: actions/cache@v4
#         with:
#           path: node_modules
#           key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
#       - name: Install dependencies
#         id: install
#         if: steps.cache.outputs.cache-hit != 'true'
#         run: |
#           npm ci
#       - name: Test code
#         id: run-tests
#         run: npm run test
#   build:
#     needs: test
#     runs-on: ubuntu-latest
#     steps:
#       - name: Get code
#         uses: actions/checkout@v4
#       - name: Checking cached modules
#         id: cache
#         uses: actions/cache@v4
#         with:
#           path: node_modules
#           key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
#       - name: Install dependencies
#         id: install
#         if: steps.cache.outputs.cache-hit != 'true'
#         run: |
#           npm ci
#       - name: Build website
#         run: npm run build
#       - name: Upload artifact
#         uses: actions/upload-artifact@v4
#         with:
#           name: dist-files
#           path: dist
#   deploy:
#     needs: build
#     runs-on: ubuntu-latest
#     env:
#       BUCKET_NAME: gha-custom-action-demo
#       REGION: us-east-1
#     steps:
#       - name: Get code
#         uses: actions/checkout@v4
#       - name: Get built artifact
#         uses: actions/download-artifact@v4
#         with:
#           name: dist-files
#           path: ./dist
#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v4
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ env.REGION }} 
#       - name: Deploy static site to S3 bucket
#         run: aws s3 sync ./dist s3://${{ env.BUCKET_NAME }} --delete
#       - name: Output website url
#         run: echo "http://${{ env.BUCKET_NAME }}.s3-website-${{ env.REGION }}.amazonaws.com"
