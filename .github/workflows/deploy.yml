name: My Workflow
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      # - name: Load & cache dependencies
      #   uses: ./.github/actions/cached-deps
      # - name: Output custom action info
      #   run: echo "Cache used? ${{ steps.cache-deps.outputs.used-cache }}"
      - name: Caching dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        id: install
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          npm ci
      - name: Test code
        id: run-tests
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      # - name: Load & cache dependencies
      #   uses: ./.github/actions/cached-deps
      #   with: 
      #     caching: 'false'
      - name: Checking cached modules
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        id: install
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          npm ci
      - name: Build website
        run: npm run build
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Get built artifact
        uses: actions/download-artifact@v3
        with:
          name: dist-files
          path: ./dist
      # - name: Deploy site
      #   id: deploy
      #   # uses: ./.github/actions/deploy-s3-javascript
      #   uses: ./.github/actions/deploy-s3-docker
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #   with:
      #     bucket: gha-custom-action-demo
      #     bucket-region: us-east-1 # Not required
      #     dist-folder: ./dist
      # - name: Output Web URL
      #   run : | # Using the action out from JS
      #     echo "Live URL: ${{ steps.deploy.outputs.website-url }}"
